"""
Test simple para verificar que la API funciona sin configuraciÃ³n.
"""
import sys
import os

# Agregar el directorio raÃ­z al path
project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, project_root)

from app import create_app

def test_simplified_api():
    """
    Prueba que la API funciona sin configuraciÃ³n adicional.
    """
    print("ðŸ§ª PROBANDO API SIMPLIFICADA")
    print("=" * 40)
    
    # Crear app
    app = create_app()
    
    with app.test_client() as client:
        # Test GET (pÃºblico)
        resp = client.get('/api/videojuegos')
        print(f"âœ… GET /api/videojuegos: {resp.status_code}")
        
        # Test POST (ahora pÃºblico con rate limiting)
        resp = client.post('/api/videojuegos', 
                          json={'nombre': 'Test Game', 'categoria': 'Test', 'precio': 10, 'valoracion': 5})
        print(f"âœ… POST /api/videojuegos (sin auth): {resp.status_code}")
        
        # Test health
        resp = client.get('/health')
        print(f"âœ… GET /health: {resp.status_code}")
        
        # Verificar headers de seguridad
        if 'X-RateLimit-Limit' in resp.headers:
            print(f"âœ… Rate limiting activo: {resp.headers['X-RateLimit-Limit']}")
        
        if 'X-Frame-Options' in resp.headers:
            print(f"âœ… Headers de seguridad activos: {resp.headers['X-Frame-Options']}")
    
    print("\nðŸŽ¯ RESULTADO: API totalmente funcional sin configuraciÃ³n")
    print("ðŸ’¡ Solo agrega rate limiting y validaciÃ³n automÃ¡ticamente")

if __name__ == '__main__':
    test_simplified_api()
